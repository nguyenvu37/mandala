{"version":3,"sources":["pages/user-page/login-page/loginPage.js","common/constCommon.js","common/validate.js","common/FormError.js"],"names":["withRouter","props","t","useTranslation","dispatchLogin","useDispatch","loggedIn","useSelector","state","users","useState","email","errorMessage","password","stateInput","setStateInput","isLoading","setIsLoading","isWaiting","setIsWaiting","useEffect","timer","setTimeout","clearTimeout","inputEmail","useRef","inputPassword","handleInputValidate","e","name","target","validateInput","getValueInput","newState","handleSubmit","a","preventDefault","current","value","NotificationManager","warning","callApi","then","res","data","role","localStorage","setItem","JSON","stringify","success","actLogin","error","getItem","history","length","push","goBack","style","width","height","display","justifyContent","alignItems","className","minHeight","textShadow","boxShadow","onClick","onSubmit","type","ref","onKeyUp","to","marginLeft","firstname","lastname","phone","fullname","address","checkingText","pass","i18next","exec","passConfirm","getTranslationCategory","category","FormError"],"mappings":"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","file":"static/js/90.7ed2f7b7.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport FormError from \"../../../common/FormError\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport callApi from \"../../../common/callApi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actLogin } from \"../../../actions/actions\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getValueInput, validateInput } from \"../../../common/validate\";\r\nimport Waiting from \"../../../common/waiting\";\r\n\r\nfunction LoginPage(props) {\r\n  const { t } = useTranslation(\"translation\");\r\n  const dispatchLogin = useDispatch();\r\n  const loggedIn = useSelector((state) => state.users.loggedIn);\r\n  const [stateInput, setStateInput] = useState({\r\n    email: {\r\n      errorMessage: \"\",\r\n    },\r\n    password: {\r\n      errorMessage: \"\",\r\n    },\r\n  });\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isWaiting, setIsWaiting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const inputEmail = useRef();\r\n  const inputPassword = useRef();\r\n\r\n  const handleInputValidate = (e) => {\r\n    const { name } = e.target;\r\n    const { errorMessage } = validateInput(\r\n      name,\r\n      getValueInput(name, inputEmail, \"\", \"\", \"\", inputPassword)\r\n    );\r\n    const newState = { ...stateInput[name] };\r\n    newState.errorMessage = errorMessage;\r\n    setStateInput({ ...stateInput, [name]: newState });\r\n  };\r\n\r\n  const handleValidationSubmit = () => {\r\n    if (\r\n      stateInput.password.errorMessage !== \"\" ||\r\n      stateInput.email.errorMessage !== \"\" ||\r\n      inputPassword.current.value === \"\" ||\r\n      inputEmail.current.value === \"\"\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsWaiting(true);\r\n    if (await !handleValidationSubmit()) {\r\n      return NotificationManager.warning(t(\"login.format\"));\r\n    } else {\r\n      callApi(`users?email=${inputEmail.current.value}`, \"Get\", null).then(\r\n        (res) => {\r\n          if (\r\n            res.data[0] &&\r\n            res.data[0].password === inputPassword.current.value &&\r\n            res.data[0].role === \"menber\"\r\n          ) {\r\n            localStorage.setItem(\r\n              \"Token\",\r\n              JSON.stringify({\r\n                ...res.data[0],\r\n                password: \"******\",\r\n                role: \"***\",\r\n              })\r\n            );\r\n            NotificationManager.success(t(\"login.success\"));\r\n            setTimeout(() => {\r\n              setIsWaiting(false);\r\n              dispatchLogin(actLogin());\r\n            }, 500);\r\n          } else {\r\n            NotificationManager.error(t(\"login.err\"));\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleRegisterPage = () => {\r\n    props.history.push(\"/register\");\r\n  };\r\n\r\n  if (loggedIn || localStorage.getItem(\"Token\") !== null) {\r\n    props.history.length <= 2\r\n      ? props.history.push(\"/\")\r\n      : props.history.goBack();\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      {isLoading ? (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100vh\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Waiting />\r\n        </div>\r\n      ) : (\r\n        <section className=\"login\" style={{ minHeight: \"500px\" }}>\r\n          <div className=\"box\">\r\n            <div className=\"login__content\">\r\n              <div className=\"login__content__title title-content btn-form\">\r\n                <h1\r\n                  style={{ textShadow: \"-2px 2px 2px rgba(229,229,229,0.74)\" }}\r\n                >\r\n                  {t(\"login.h1\")}\r\n                </h1>\r\n                <div className=\"login__content__title__btn btn-form\">\r\n                  <button\r\n                    style={{ boxShadow: \"3px 4px 5px 0px rgba(0,0,0,0.75)\" }}\r\n                    onClick={handleRegisterPage}\r\n                  >\r\n                    {t(\"login.btn-register\")}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"login__content__form form\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"login__content__form__title\">\r\n                    <h3\r\n                      style={{\r\n                        textShadow: \"-2px 2px 2px rgba(229,229,229,0.74)\",\r\n                      }}\r\n                    >\r\n                      {t(\"login.h3\")}\r\n                    </h3>\r\n                    <p>{t(\"login.p\")}</p>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      {t(\"login.email\")} <span>*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"email\"\r\n                      ref={inputEmail}\r\n                      name=\"email\"\r\n                      onKeyUp={handleInputValidate}\r\n                    />\r\n                    <FormError errorMessage={stateInput.email.errorMessage} />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      {t(\"login.password\")} <span>*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      ref={inputPassword}\r\n                      name=\"password\"\r\n                      onKeyUp={handleInputValidate}\r\n                    />\r\n                    <FormError\r\n                      errorMessage={stateInput.password.errorMessage}\r\n                    />\r\n                  </div>\r\n                  <div className=\"login__content__form__btn btn-form\">\r\n                    <Link to=\"/recover\">{t(\"forget-pass\")}</Link>\r\n                    <button\r\n                      style={{\r\n                        boxShadow: \"3px 4px 5px 0px rgba(0,0,0,0.75)\",\r\n                        marginLeft: \"10px\",\r\n                      }}\r\n                    >\r\n                      {isWaiting ? (\r\n                        <div className=\"btn-view\">\r\n                          <Waiting />\r\n                        </div>\r\n                      ) : (\r\n                        t(\"login.btn-login\")\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","export const email = /\\S+@\\S+\\.\\S+/;\r\nexport const firstname = /^[a-zA-Z]+$/;\r\nexport const lastname = /^[a-zA-Z]+$/;\r\nexport const phone = /^\\d{10}$/;\r\nexport const password = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/;\r\nexport const fullname = /^[a-zA-Z ]+$/;\r\nexport const address = /^[a-zA-Z0-9\\s,-]*$/;\r\n","import i18next from \"i18next\";\r\nimport {\r\n  address,\r\n  email,\r\n  firstname,\r\n  fullname,\r\n  lastname,\r\n  password,\r\n  phone,\r\n} from \"./constCommon\";\r\n\r\nexport const validateInput = (type, checkingText, pass) => {\r\n  if (checkingText === \"\") {\r\n    return { errorMessage: i18next.t(\"validate.require\") };\r\n  }\r\n\r\n  if (type === \"email\") {\r\n    const regexp = email;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.email\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"firstname\") {\r\n    const regexp = firstname;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.firstname\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"lastname\") {\r\n    const regexp = lastname;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.lastname\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"phone\") {\r\n    const regexp = phone;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.phone\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"password\") {\r\n    const regexp = password;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.password\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"confirmPass\") {\r\n    const regexPass = pass;\r\n    if (checkingText === regexPass) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.confirm\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"fullname\") {\r\n    const regexp = fullname;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.fullname\"),\r\n      };\r\n    }\r\n  }\r\n\r\n  if (type === \"address\") {\r\n    const regexp = address;\r\n    const checkingResult = regexp.exec(checkingText);\r\n    if (checkingResult !== null) {\r\n      return { errorMessage: \"\" };\r\n    } else {\r\n      return {\r\n        errorMessage: i18next.t(\"validate.address\"),\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport const getValueInput = (\r\n  name,\r\n  email,\r\n  firstname,\r\n  lastname,\r\n  phone,\r\n  pass,\r\n  passConfirm,\r\n  fullname,\r\n  address\r\n) => {\r\n  switch (name) {\r\n    case \"email\":\r\n      return email.current.value;\r\n    case \"firstname\":\r\n      return firstname.current.value;\r\n    case \"lastname\":\r\n      return lastname.current.value;\r\n    case \"phone\":\r\n      return phone.current.value;\r\n    case \"password\":\r\n      return pass.current.value;\r\n    case \"confirmPass\":\r\n      return passConfirm.current.value;\r\n    case \"fullname\":\r\n      return fullname.current.value;\r\n    case \"address\":\r\n      return address.current.value;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const getTranslationCategory = (category) => {\r\n  switch (category) {\r\n    case \"cosmetic\":\r\n      return i18next.t(\"grid.category1\");\r\n    case \"makeup\":\r\n      return i18next.t(\"grid.category2\");\r\n    case \"perfume\":\r\n      return i18next.t(\"grid.category3\");\r\n    case \"lotions\":\r\n      return i18next.t(\"grid.menu1_1\");\r\n    case \"mask\":\r\n      return i18next.t(\"grid.menu1_2\");\r\n    case \"cleanser\":\r\n      return i18next.t(\"grid.menu1_3\");\r\n    case \"lipstick\":\r\n      return i18next.t(\"grid.menu2_1\");\r\n    case \"mascara\":\r\n      return i18next.t(\"grid.menu2_2\");\r\n    case \"blusher\":\r\n      return i18next.t(\"grid.menu2_3\");\r\n    default:\r\n      return category;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nconst FormError = (props) => {\r\n  return (\r\n    <div className=\"text-left text-danger font-italic\">\r\n      {props.errorMessage}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormError;\r\n"],"sourceRoot":""}