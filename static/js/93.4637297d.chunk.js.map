{"version":3,"sources":["components/cart-page/cart-list.js","pages/user-page/cart-page/cartPage.js","common/calculation.js","components/cart-page/cart-item.js"],"names":["withRouter","props","t","useTranslation","useState","data","setData","sum","setSum","dataCarts","setDataCarts","numProduct","useSelector","state","numCart","num","actionDelProduct","delCart","id","inCart","addCart","dispatch","useDispatch","useEffect","localStorage","getItem","a","callApi","JSON","parse","then","res","status","length","carts","summary","getSummary","fetchData","handleDelAll","window","confirm","actDelCart","actAddCart","onChangeQuantity","product","index","findIndex","item","quantity","parseInt","cart","actNumCart","onDeleteElement","newCart","filter","className","style","minHeight","map","key","marginTop","fontSize","marginLeft","toString","replace","type","onClick","history","push","height","width","display","flexDirection","justifyContent","alignItems","to","CartPage","isLoading","setIsLoading","timer","setTimeout","clearTimeout","arr","Math","floor","price","discount","reduce","b","getTotal","getPrice","getQuantity","getKeywordText","str","toUpperCase","split","x","join","getKeywordId","formCurencyVN","toLocaleString","currency","inputQuan","useRef","total","setTotal","current","value","handleChageQuantity","totalPrice","dataProduct","handleDelete","dataCart","textTransform","src","require","img","alt","code","padding","cursor","name","minWidtd","ref","onChange"],"mappings":"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","file":"static/js/93.4637297d.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport callApi from \"../../common/callApi\";\r\nimport CartItem from \"./cart-item\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { actAddCart, actDelCart, actNumCart } from \"../../actions/actions\";\r\nimport { getSummary } from \"../../common/calculation\";\r\n\r\nconst CartList = (props) => {\r\n  const { t } = useTranslation(\"translation\");\r\n  const [data, setData] = useState([]);\r\n  const [sum, setSum] = useState(0);\r\n  const [dataCarts, setDataCarts] = useState([]);\r\n  const numProduct = useSelector((state) => state.numCart.num);\r\n  const actionDelProduct = useSelector((state) => state.delCart.id);\r\n  const inCart = useSelector((state) => state.addCart);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"Token\") !== null) {\r\n      const fetchData = async () => {\r\n        await callApi(\r\n          `carts?userId=${JSON.parse(localStorage.getItem(\"Token\")).id}`,\r\n          \"get\",\r\n          null\r\n        ).then((res) => {\r\n          if (res && res.status === 200) {\r\n            if (res.data.length > 0) {\r\n              const carts = [...res.data][0].data;\r\n              let summary = getSummary(carts);\r\n              setData([...carts]);\r\n              setSum(summary);\r\n              setDataCarts([...res.data]);\r\n            } else {\r\n              setData([]);\r\n              setSum(0);\r\n              setDataCarts([]);\r\n            }\r\n          }\r\n        });\r\n      };\r\n\r\n      fetchData();\r\n    } else {\r\n      let summary = getSummary(inCart);\r\n      setSum(summary);\r\n      setData([...inCart]);\r\n    }\r\n  }, [numProduct, actionDelProduct, inCart]);\r\n\r\n  const handleContinueShopping = () => {\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  const handleDelAll = async () => {\r\n    if (window.confirm(t(\"del-all\"))) {\r\n      if (localStorage.getItem(\"Token\") !== null) {\r\n        await callApi(\r\n          `carts/${JSON.parse(localStorage.getItem(\"Token\")).id}`,\r\n          \"delete\",\r\n          null\r\n        ).then(() => {\r\n          dispatch(actDelCart(JSON.parse(localStorage.getItem(\"Token\")).id));\r\n        });\r\n      } else {\r\n        dispatch(actAddCart([]));\r\n        dispatch(actDelCart(1));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleInformationPage = () => {\r\n    props.history.push(\"/information-customer\");\r\n  };\r\n\r\n  const onChangeQuantity = (product) => {\r\n    let index = data.findIndex((item) => item.id === product.id);\r\n\r\n    data[index] = {\r\n      ...data[index],\r\n      quantity: parseInt(product.quantity),\r\n    };\r\n\r\n    let cart = {\r\n      ...dataCarts[0],\r\n      data: [...data],\r\n    };\r\n    callApi(`carts/${JSON.parse(localStorage.getItem(\"Token\")).id}`, \"put\", {\r\n      ...cart,\r\n    }).then(() => {\r\n      dispatch(actNumCart(data[index].quantity));\r\n    });\r\n  };\r\n\r\n  const onDeleteElement = (id) => {\r\n    let newCart = data.filter((item) => item.id !== id);\r\n    let cart = {\r\n      ...dataCarts[0],\r\n      data: [...newCart],\r\n    };\r\n    callApi(`carts/${JSON.parse(localStorage.getItem(\"Token\")).id}`, \"put\", {\r\n      ...cart,\r\n    }).then(() => {\r\n      dispatch(actDelCart(id));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"cart\" style={{ minHeight: \"500px\" }}>\r\n      {data.length > 0 ? (\r\n        <div className=\"box\">\r\n          <div className=\"cart__content\">\r\n            <div className=\"cart__content__title\">\r\n              <h1>{t(\"cart.title\")}</h1>\r\n            </div>\r\n            <div className=\"cart__content__table\">\r\n              <table>\r\n                <tbody>\r\n                  <tr>\r\n                    <th>{t(\"cart.th1\")}</th>\r\n                    <th>{t(\"cart.th2\")}</th>\r\n                    <th>{t(\"cart.th3\")}</th>\r\n                    <th>{t(\"cart.th4\")}</th>\r\n                    <th>{t(\"cart.th5\")}</th>\r\n                    <th>{t(\"cart.th6\")}</th>\r\n                  </tr>\r\n                </tbody>\r\n                {data.map((item, index) => {\r\n                  return (\r\n                    <CartItem\r\n                      key={index}\r\n                      data={item}\r\n                      onChangeQuantity={onChangeQuantity}\r\n                      onDeleteElement={onDeleteElement}\r\n                    />\r\n                  );\r\n                })}\r\n              </table>\r\n            </div>\r\n            <div className=\"cart__content__total\" style={{ marginTop: \"20px\" }}>\r\n              <h4>\r\n                {t(\"cart.h4\")}:{\" \"}\r\n                <span\r\n                  className=\"price\"\r\n                  style={{ fontSize: \"22px\", marginLeft: \"10px\" }}\r\n                >\r\n                  {sum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n                  <small>đ</small>\r\n                </span>\r\n              </h4>\r\n              <span className=\"price\"></span>\r\n            </div>\r\n            <div className=\"cart__content__btn\">\r\n              <button\r\n                className=\"buying\"\r\n                type=\"button\"\r\n                onClick={handleContinueShopping}\r\n              >\r\n                {t(\"cart.btn-goon\")}\r\n              </button>\r\n              <button className=\"delete\" type=\"button\" onClick={handleDelAll}>\r\n                {t(\"cart.btn-del\")}\r\n              </button>\r\n              <button\r\n                className=\"payment\"\r\n                type=\"button\"\r\n                onClick={handleInformationPage}\r\n              >\r\n                {t(\"cart.btn-payment\")}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className=\"box\"\r\n          style={{\r\n            height: \"500px\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <h4>{t(\"nothing-cart\")}</h4>\r\n          <Link className=\"buy\" to=\"/\">\r\n            {t(\"buy-now\")}\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withRouter(CartList);\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Waiting from \"../../../common/waiting\";\r\nimport CartList from \"../../../components/cart-page/cart-list\";\r\n\r\nconst CartPage = () => {\r\n  const { t } = useTranslation(\"translation\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n  return (\r\n    <main>\r\n      {isLoading ? (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100vh\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Waiting />\r\n        </div>\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"box\">\r\n            <div className=\"process\">\r\n              <div className=\"progressbar\">\r\n                <div className=\"page-cart\">\r\n                  <span>Step 1: {t(\"process.step1\")}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <CartList />\r\n        </Fragment>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n","export const getSummary = (arr) => {\r\n  return arr\r\n    .map(\r\n      (item) =>\r\n        parseInt(item.quantity) *\r\n        Math.floor(item.price * ((100 - item.discount) / 100))\r\n    )\r\n    .reduce((a, b) => a + b, 0);\r\n};\r\n\r\nexport const getTotal = (data, quantity) => {\r\n  return (\r\n    Math.floor(data.price * ((100 - data.discount) / 100)) * parseInt(quantity)\r\n  );\r\n};\r\n\r\nexport const getPrice = (data) => {\r\n  return Math.floor(data.price * ((100 - data.discount) / 100));\r\n};\r\n\r\nexport const getQuantity = (arr) => {\r\n  return arr.map((item) => item.quantity).reduce((a, b) => a + b, 0);\r\n};\r\n\r\nexport const getKeywordText = (str) => {\r\n  return str\r\n    .toUpperCase()\r\n    .split(\" \")\r\n    .filter((x) => x !== \"\")\r\n    .join(\"\");\r\n};\r\n\r\nexport const getKeywordId = (str) => {\r\n  return str\r\n    .toUpperCase()\r\n    .split(\"-\")\r\n    .filter((x) => x !== \"-\")\r\n    .join(\"\");\r\n};\r\n\r\nexport function formCurencyVN(price) {\r\n  return price.toLocaleString(\"it-IT\", {\r\n    style: \"currency\",\r\n    currency: \"VND\",\r\n  });\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actAddCart, actDelCart, actNumCart } from \"../../actions/actions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPrice, getTotal } from \"../../common/calculation\";\r\n\r\nconst CartItem = (props) => {\r\n  const { t } = useTranslation(\"translation\");\r\n  const { data, onChangeQuantity, onDeleteElement } = props;\r\n  const inputQuan = useRef();\r\n  const [total, setTotal] = useState(0);\r\n  const inCart = useSelector((state) => state.addCart);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    inputQuan.current.value = parseInt(data.quantity);\r\n    setTotal(getTotal(data, data.quantity));\r\n  }, [data]);\r\n\r\n  const handleChageQuantity = async (id) => {\r\n    if (inputQuan.current.value > 0) {\r\n      let totalPrice = getTotal(data, inputQuan.current.value);\r\n      if (localStorage.getItem(\"Token\") !== null) {\r\n        let dataProduct = {\r\n          ...data,\r\n          quantity: parseInt(inputQuan.current.value),\r\n        };\r\n\r\n        onChangeQuantity({ ...dataProduct });\r\n      } else {\r\n        let index = inCart.findIndex((item) => item.id === id);\r\n        inCart[index] = {\r\n          ...inCart[index],\r\n          quantity: parseInt(inputQuan.current.value),\r\n        };\r\n        dispatch(actAddCart([...inCart]));\r\n        dispatch(actNumCart(inputQuan.current.value));\r\n      }\r\n      setTotal(totalPrice);\r\n    } else {\r\n      let totalPrice = getTotal(data, 1);\r\n      inputQuan.current.value = 1;\r\n      if (localStorage.getItem(\"Token\") !== null) {\r\n        let dataProduct = {\r\n          ...data,\r\n          quantity: parseInt(inputQuan.current.value),\r\n        };\r\n        onChangeQuantity({ ...dataProduct });\r\n      } else {\r\n        let index = inCart.findIndex((item) => item.id === id);\r\n        inCart[index] = {\r\n          ...inCart[index],\r\n          quantity: parseInt(inputQuan.current.value),\r\n        };\r\n        dispatch(actAddCart([...inCart]));\r\n        dispatch(actNumCart(inputQuan.current.value));\r\n      }\r\n      setTotal(totalPrice);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (localStorage.getItem(\"Token\") !== null) {\r\n      if (window.confirm(t(\"want-del\"))) {\r\n        onDeleteElement(id);\r\n      }\r\n    } else {\r\n      if (window.confirm(t(\"want-del\"))) {\r\n        let dataCart = inCart.filter((item) => item.id !== id);\r\n        dispatch(actAddCart([...dataCart]));\r\n        dispatch(actDelCart(id));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDetailPage = (id) => {\r\n    props.history.push(`/detail/${id}`);\r\n  };\r\n\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <td style={{ textTransform: \"uppercase\" }}>\r\n          <img\r\n            src={require(`../../assets/img/${data.img}`)}\r\n            alt=\"\"\r\n            style={{ width: \"60px\" }}\r\n          />\r\n          <h4>{data.code}</h4>\r\n        </td>\r\n        <td\r\n          style={{ width: \"200px\", padding: \"0 5px\", cursor: \"pointer\" }}\r\n          onClick={() => handleDetailPage(data.code)}\r\n        >\r\n          {data.name}\r\n        </td>\r\n        <td style={{ minWidtd: \"65px\" }}>\r\n          <span className=\"price\">\r\n            {getPrice(data)\r\n              .toString()\r\n              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n            <small>đ</small>\r\n          </span>\r\n        </td>\r\n        <td style={{ width: \"90px\" }}>\r\n          <input\r\n            type=\"number\"\r\n            id={data.id}\r\n            ref={inputQuan}\r\n            style={{ width: \"50px\", padding: \"2px\" }}\r\n            onChange={() => handleChageQuantity(data.id)}\r\n          />\r\n        </td>\r\n        <td style={{ width: \"120px\" }}>\r\n          <span className=\"price\">\r\n            {total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n            <small>đ</small>\r\n          </span>\r\n        </td>\r\n        <td>\r\n          <i\r\n            className=\"fas fa-trash-alt\"\r\n            onClick={() => handleDelete(data.id)}\r\n            style={{ cursor: \"pointer\" }}\r\n          ></i>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default withRouter(CartItem);\r\n"],"sourceRoot":""}